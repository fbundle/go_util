package uint_ntt

import (
	"ca/pkg/vec"
	"math/bits"
)

type Block = vec.Vec[uint64] // TODO - change  Block to uint16 to save memory

// trim : trim unused zeros at high degree
func trim(block Block) Block {
	for block.Len() > 0 && block.Get(block.Len()-1) == 0 {
		block = block.Slice(0, block.Len()-1)
	}
	return block
}

// nextPowerOfTwo : return the smallest power of 2 greater than x (code generated by chatgpt)
func nextPowerOfTwo(x uint64) uint64 {
	if x == 0 {
		return 1
	}
	if x > 1<<63 {
		panic("next power of 2 overflows uint64")
	}
	return 1 << (64 - bits.LeadingZeros64(x-1))
}
